# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Deploy to production

permissions:
  id-token: write
  contents: read

on:
  push:
    branches: [ "main" ]
    
jobs:

  test:
    name: Build image
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: arn:aws:iam::578352380115:role/GithubAction
        aws-region: ap-southeast-1
    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2
    
    - name: Load secrets and save to app.env
      run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq -r "to_entries | .[] | \"\(.key)=\(.value)\"" > app.env

    - name: Debug app.env file
      run: cat app.env


    - name: Debug file tree
      run: ls -R

    - name: Build Docker image
      run: docker build -t ${{ steps.login-ecr.outputs.registry }}/simplebank:latest .

    - name: Push Docker image to ECR
      run: docker push ${{ steps.login-ecr.outputs.registry }}/simplebank:latest

    - name: Package and push helm chart to Amazon ECR
      env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
      run: |
        helm package helm/simplebank
        helm push simplebank-0.1.0.tgz oci://$REGISTRY
        
